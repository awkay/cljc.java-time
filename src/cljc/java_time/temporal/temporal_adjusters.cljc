(ns cljc.java-time.temporal.temporal-adjusters (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [TemporalAdjusters]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal TemporalAdjusters])))
(clojure.core/defn next {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek3062] (. java.time.temporal.TemporalAdjusters next java-time-DayOfWeek3062)))
(clojure.core/defn next-or-same {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek3063] (. java.time.temporal.TemporalAdjusters nextOrSame java-time-DayOfWeek3063)))
(clojure.core/defn first-day-of-next-month {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (. java.time.temporal.TemporalAdjusters firstDayOfNextMonth)))
(clojure.core/defn first-day-of-month {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (. java.time.temporal.TemporalAdjusters firstDayOfMonth)))
(clojure.core/defn first-day-of-year {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (. java.time.temporal.TemporalAdjusters firstDayOfYear)))
(clojure.core/defn of-date-adjuster {:arglists (quote (["java.util.function.UnaryOperator"]))} (^java.time.temporal.TemporalAdjuster [^java.util.function.UnaryOperator java-util-function-UnaryOperator3064] (. java.time.temporal.TemporalAdjusters ofDateAdjuster java-util-function-UnaryOperator3064)))
(clojure.core/defn last-day-of-year {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (. java.time.temporal.TemporalAdjusters lastDayOfYear)))
(clojure.core/defn first-in-month {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek3065] (. java.time.temporal.TemporalAdjusters firstInMonth java-time-DayOfWeek3065)))
(clojure.core/defn previous-or-same {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek3066] (. java.time.temporal.TemporalAdjusters previousOrSame java-time-DayOfWeek3066)))
(clojure.core/defn previous {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek3067] (. java.time.temporal.TemporalAdjusters previous java-time-DayOfWeek3067)))
(clojure.core/defn last-day-of-month {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (. java.time.temporal.TemporalAdjusters lastDayOfMonth)))
(clojure.core/defn last-in-month {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek3068] (. java.time.temporal.TemporalAdjusters lastInMonth java-time-DayOfWeek3068)))
(clojure.core/defn first-day-of-next-year {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (. java.time.temporal.TemporalAdjusters firstDayOfNextYear)))
(clojure.core/defn day-of-week-in-month {:arglists (quote (["int" "java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.lang.Integer int3069 ^java.time.DayOfWeek java-time-DayOfWeek3070] (. java.time.temporal.TemporalAdjusters dayOfWeekInMonth int3069 java-time-DayOfWeek3070)))
